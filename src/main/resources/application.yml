spring:
  application:
    name: econyang
  
  profiles:
    active: dev
    
  # 추가 설정 파일 로드
  config:
    import:
      - classpath:config/rss-sources.yml
      - classpath:config/digest-template.yml
  
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/econyang}
    username: ${DB_USER:econyang_user}
    password: ${DB_PASS:your-secure-password}
    driver-class-name: org.postgresql.Driver
  
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: Asia/Seoul

logging:
  level:
    com.yourco.econyang: INFO
    org.springframework.batch: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# RSS 소스 설정
sources:
  - name: "한국경제"
    code: "hankyung"
    url: "https://www.hankyung.com/feed/economy"
    weight: 1.0
    enabled: true
    timeout: 10000
    retryCount: 3
    description: "한국경제 경제 섹션 RSS"
  - name: "매일경제"
    code: "maeil"
    url: "https://www.mk.co.kr/rss/30000001/"
    weight: 1.0
    enabled: true
    timeout: 10000
    retryCount: 3
    description: "매일경제 경제 섹션 RSS"
  - name: "Google 뉴스 - 한국경제"
    code: "google_kr_econ"
    url: "https://news.google.com/rss/search?q=%ED%95%9C%EA%B5%AD%EA%B2%BD%EC%A0%9C&hl=ko&gl=KR&ceid=KR:ko"
    weight: 0.8
    enabled: true
    timeout: 15000
    retryCount: 2
    description: "Google 뉴스 한국경제 검색 결과"

global:
  userAgent: "EconoNyang/1.0 🐱"
  defaultTimeout: 10000
  defaultRetryCount: 3
  maxArticlesPerSource: 20
  minPublishInterval: 3600

filters:
  includeKeywords:
    - "경제"
    - "금리"
    - "투자"
    - "주식"
    - "부동산"
    - "금융"
    - "기업"
    - "증시"
    - "환율"
    - "인플레이션"
    - "GDP"
    - "수출"
    - "수입"
    - "무역"
    - "산업"
  excludeKeywords:
    - "스포츠"
    - "연예"
    - "게임"
    - "날씨"
    - "교통"
    - "사건"
    - "사고"

app:
  timezone: Asia/Seoul
  
  # 배치 실행 설정
  batch:
    autoRun: ${BATCH_AUTO_RUN:false}
    
  # 다이제스트 기본 설정
  digest:
    sendAt: "07:30"
    maxArticles: 10
    minImportanceScore: 5
    templateName: "default"
    format: "markdown"
    
  # OpenAI API 설정
  openai:
    apiBase: ${OPENAI_API_BASE:https://api.openai.com}
    apiKey: ${OPENAI_API_KEY:}
    modelSmall: ${OPENAI_MODEL_SMALL:gpt-4o-mini}
    modelMain: ${OPENAI_MODEL_MAIN:gpt-4o}
    requestTimeoutSec: 30
    enableBatch: true
    batchCutoff: "07:10"
    maxInputTokens: 5000
    maxOutputTokens: 900
    
  # 본문 추출 설정
  extraction:
    timeoutSec: 15
    maxRetries: 2
    retryDelayMs: 1000
    userAgent: "EconoNyang-Bot/1.0 🐱 (+https://github.com/yourco/econyang)"
    
  # 알림/모니터링 설정
  monitoring:
    enableHealthCheck: true
    enableMetrics: true
    logLevel: INFO
    
  # Discord 알림 설정
  discord:
    webhookUrl: ${DISCORD_WEBHOOK_URL:}
    enableNotification: ${DISCORD_ENABLE:true}
    dryRun: ${DRY_RUN:true}
    
  # 보안 설정
  security:
    enableCors: true
    corsOrigins: ${CORS_ORIGINS:http://localhost:3000,https://yourdomain.com}
    rateLimitPerMinute: 60

---
spring:
  config:
    activate:
      on-profile: dev
  
  datasource:
    url: jdbc:postgresql://localhost:5432/econyang
  
  jpa:
    show-sql: true

---
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  
  flyway:
    enabled: false

---
spring:
  config:
    activate:
      on-profile: prod
  
  jpa:
    show-sql: false
  
logging:
  level:
    com.yourco.econyang: WARN
    org.springframework.batch: WARN